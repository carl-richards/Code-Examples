-- TABLE THAT CONTAINS THE PROCEDURE NAME, STATUS AND FREQUENCY
-- DROP TABLE IDT_SCHEDULED_PROCS; -- COMMIT;
CREATE TABLE IDT_SCHEDULED_PROCS
(LPROCSEQ NUMBER,
 PROCEDURE_NAME VARCHAR2 (100 BYTE),
 NSTATUS NUMBER,
 DTNEXTRUN DATE,
 NFREQUENCY NUMBER,
 STRMESSAGES VARCHAR2 (1000 BYTE));
 
 
-- PROCEDURE THAT CALLS THE STORED PROCEDURE NAME AND ALSO CALLS THE NEXT RUN DATE 
CREATE OR REPLACE PROCEDURE IDT_SCHED_PROCS_WRAP_PRC AS

V_PROCEDURE IDT_SCHEDULED_PROCS.PROCEDURE_NAME%TYPE;
V_PROCSEQ   IDT_SCHEDULED_PROCS.LPROCSEQ%TYPE

BEGIN

SELECT procedure_name, 
INTO V_PROCEDURE
FROM test_insert
WHERE nstatus = 1
  AND TRUNC(dtnextrun) = TRUNC(SYSDATE);
  

 EXECUTE IMMEDIATE 'BEGIN ' || V_PROCEDURE || '; END;';
 
 -- INSERT EXCEPTION BLOG
 
 IDT_SCHED_PROCS_NEXTRUN_PRC(V_PROCSEQ);
 
 SEND_EMAIL_PRC('CARL.RICHARDS@CIMPLYHEALTH.CO.UK','SCHEDULED PROCDURES'||SYSDATE,'ALL SCHEDULED PROCEDURES HAVE NOW RUN FOR '||SYSDATE||'. PLEASE CHECK LOG TABLE FOR ANY ERRORS');
  
END;


-- PROCEDURE THAT UPDATES THE NEXT RUN DATE. 
CREATE OR REPLACE PROCEDURE IDT_SCHED_PROCS_NEXTRUN_PRC
(PI_PROCSEQ IN NUMBER)
AS
DECLARE 

V_FREQUENCY IDT_SCHEDULED_PROCS.NFREQUENCY%TYPE;

BEGIN

SELECT NFREQUENCY
INTO V_FREQUENCY
FROM IDT_SCHEDULED_PROCS
WHERE LPROCSEQ = PI_PROCSEQ;

IF V_FREQUENCY = 1 -- DAILY
THEN UPDATE IDT_SCHEDULED_PROCS
     SET DTNEXTRUN = TRUNC(DTNEXTRUN)+1;
ELSIF V_FREQUENCY = 2 -- WEEKLY
THEN  UPDATE IDT_SCHEDULED_PROCS
     SET DTNEXTRUN = TRUNC(DTNEXTRUN)+7;
ELSIF V_FREQUENCY = 3 -- MONTHLY
THEN UPDATE IDT_SCHEDULED_PROCS
     SET DTNEXTRUN = ADD_MONTHS(TRUNC(DTNEXTRUN),1);
END IF;

COMMIT;

END;
 
 
-- PROCEDURE TO SEND AN EMAIL WHEN THE JOB(S) HAS FINISHED
CREATE OR REPLACE PROCEDURE SEND_EMAIL_PRC
(PI_RECIPIENTS IN VARCHAR2, PI_SUBJECT IN VARCHAR2, PI_MESSAGE IN VARCHAR2)
AS

BEGIN
  EXECUTE IMMEDIATE 'ALTER SESSION SET smtp_out_server = ''127.0.0.1''';
  UTL_MAIL.send(sender => 'me@address.com',
            recipients => PI_RECIPIENTS,
               subject => PI_SUBJECT,
               message => PI_MESSAGE,
             mime_type => 'text; charset=us-ascii');
END;
